;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(command-history ivy-history counsel-M-x-history evil-ex-history extended-command-history file-name-history))
(setq command-history '((evil-yank 80 95 'line nil nil) (customize-themes)))
(setq counsel-M-x-history '(#("theme" 0 5 (ivy-index 1)) #("^linu" 0 5 (ivy-index 0))))
(setq evil-ex-history '(#("w" 0 1 (ex-index 1)) #("wq" 0 1 (ex-index 1) 1 2 (ex-index 2))))
(setq extended-command-history '("evil-mode"))
(setq file-name-history '(#("/home/firaaz/.emacs.d/config/theme.el" 0 37 (ivy-index 0)) #("/home/firaaz/.emacs.d/config/version-control.el" 0 47 (ivy-index 0)) #("/home/firaaz/.emacs.d/init.el" 0 29 (ivy-index 0)) "~/.emacs.d/init.el" "~/.emacs.d/config/evil.el"))
(setq evil-jumps-history '((5 "/home/firaaz/.emacs.d/.gitignore") (1 "/home/firaaz/.emacs.d/.gitignore") (216 "/home/firaaz/.emacs.d/config/theme.el") (209 "/home/firaaz/.emacs.d/config/theme.el") (201 "/home/firaaz/.emacs.d/config/theme.el") (192 "/home/firaaz/.emacs.d/config/theme.el") (192 "/home/firaaz/.emacs.d/config/theme.el") (191 "/home/firaaz/.emacs.d/config/theme.el") (180 "/home/firaaz/.emacs.d/config/theme.el") (180 "/home/firaaz/.emacs.d/config/theme.el") (1 "/home/firaaz/.emacs.d/config/version-control.el") (317 "/home/firaaz/.emacs.d/config/version-control.el") (1 "/home/firaaz/.emacs.d/config/theme.el") (3852 "/home/firaaz/.emacs.d/config/theme.el") (821 "/home/firaaz/.emacs.d/config/theme.el") (3852 "/home/firaaz/.emacs.d/config/theme.el") (33 "/home/firaaz/.emacs.d/config/theme.el") (434 "/home/firaaz/.emacs.d/config/theme.el") (179 "/home/firaaz/.emacs.d/config/theme.el") (434 "/home/firaaz/.emacs.d/config/theme.el") (179 "/home/firaaz/.emacs.d/config/theme.el") (434 "/home/firaaz/.emacs.d/config/theme.el") (179 "/home/firaaz/.emacs.d/config/theme.el") (434 "/home/firaaz/.emacs.d/config/theme.el") (179 "/home/firaaz/.emacs.d/config/theme.el") (434 "/home/firaaz/.emacs.d/config/theme.el") (179 "/home/firaaz/.emacs.d/config/theme.el") (737 "/home/firaaz/.emacs.d/init.el")))
(setq kill-ring '("-save-list" #("auto-save-list
" 0 15 (yank-handler (evil-yank-line-handler nil t))) #(";;; -*- lexical-binding: t -*-
" 0 4 (fontified t face font-lock-comment-delimiter-face) 4 30 (fontified t face font-lock-comment-face) 30 31 (fontified t)) "(use-package org-bullets
  :hook (org-mode . org-bullets-mode))" "(use-package company-box
  :after (company all-the-icons)
  :hook (company-mode . company-box-mode)
  :config
  (setq
   company-box-show-single-candidate t
   company-box-icons-elisp
   (list (all-the-icons-material \"functions\"                  :height 0.8 :face 'all-the-icons-red)
         (all-the-icons-material \"check_circle\"               :height 0.8 :face 'all-the-icons-blue)
         (all-the-icons-material \"stars\"                      :height 0.8 :face 'all-the-icons-orange)
         (all-the-icons-material \"format_paint\" :height 0.8 :face 'all-the-icons-pink))
   company-box-icons-lsp
   `((1  . ,(all-the-icons-material \"text_fields\"              :height 0.8 :face 'all-the-icons-green)) ; text
     (2  . ,(all-the-icons-material \"functions\"                :height 0.8 :face 'all-the-icons-red))   ; method
     (3  . ,(all-the-icons-material \"functions\"                :height 0.8 :face 'all-the-icons-red))   ; function
     (4  . ,(all-the-icons-material \"functions\"                :height 0.8 :face 'all-the-icons-red))   ; constructor
     (5  . ,(all-the-icons-material \"functions\"                :height 0.8 :face 'all-the-icons-red))   ; field
     (6  . ,(all-the-icons-material \"adjust\"                   :height 0.8 :face 'all-the-icons-blue))  ; variable
     (7  . ,(all-the-icons-material \"class\"                    :height 0.8 :face 'all-the-icons-red))   ; class
     (8  . ,(all-the-icons-material \"settings_input_component\" :height 0.8 :face 'all-the-icons-red))   ; interface
     (9  . ,(all-the-icons-material \"view_module\"              :height 0.8 :face 'all-the-icons-red))   ; module
     (10 . ,(all-the-icons-material \"settings\"                 :height 0.8 :face 'all-the-icons-red))   ; property
     (11 . ,(all-the-icons-material \"straighten\"               :height 0.8 :face 'all-the-icons-red))   ; unit
     (12 . ,(all-the-icons-material \"filter_1\"                 :height 0.8 :face 'all-the-icons-red))   ; value
     (13 . ,(all-the-icons-material \"plus_one\"                 :height 0.8 :face 'all-the-icons-red))   ; enum
     (14 . ,(all-the-icons-material \"filter_center_focus\"      :height 0.8 :face 'all-the-icons-red))   ; keyword
     (15 . ,(all-the-icons-material \"short_text\"               :height 0.8 :face 'all-the-icons-red))   ; snippet
     (16 . ,(all-the-icons-material \"color_lens\"               :height 0.8 :face 'all-the-icons-red))   ; color
     (17 . ,(all-the-icons-material \"insert_drive_file\"        :height 0.8 :face 'all-the-icons-red))   ; file
     (18 . ,(all-the-icons-material \"collections_bookmark\"     :height 0.8 :face 'all-the-icons-red))   ; reference
     (19 . ,(all-the-icons-material \"folder\"                   :height 0.8 :face 'all-the-icons-red))   ; folder
     (20 . ,(all-the-icons-material \"people\"                   :height 0.8 :face 'all-the-icons-red))   ; enumMember
     (21 . ,(all-the-icons-material \"pause_circle_filled\"      :height 0.8 :face 'all-the-icons-red))   ; constant
     (22 . ,(all-the-icons-material \"streetview\"               :height 0.8 :face 'all-the-icons-red))   ; struct
     (23 . ,(all-the-icons-material \"event\"                    :height 0.8 :face 'all-the-icons-red))   ; event
     (24 . ,(all-the-icons-material \"control_point\"            :height 0.8 :face 'all-the-icons-red))   ; operator
     (25 . ,(all-the-icons-material \"class\" :height 0.8 :face 'all-the-icons-red))))
  )
" "(use-package all-the-icons
  :config
  ;; all-the-icons doesn't work without font-lock+
  ;; And font-lock+ doesn't have autoloads
  (use-package font-lock+
    :straight (:host github :repo \"emacsmirror/font-lock-plus\")
    :config (require 'font-lock+)))" #("
" 0 1 (yank-handler (evil-yank-line-handler nil t))) #("
" 0 1 (yank-handler (evil-yank-line-handler nil t)))))
(setq search-ring 'nil)
(setq regexp-search-ring '("autosave"))
